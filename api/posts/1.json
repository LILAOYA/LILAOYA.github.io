{"total":14,"pageSize":12,"pageCount":2,"data":[{"title":"Hexo折腾系列——博客访问速度优化","uid":"05654cbc7f9739c75f579c179f1ebccf","slug":"Hexo折腾系列——博客访问速度优化","date":"2022-03-19T04:00:15.000Z","updated":"2022-03-19T04:08:31.788Z","comments":true,"path":"api/articles/Hexo折腾系列——博客访问速度优化.json","cover":"/img/hexo.png","text":"压缩静态资源虽然已经优化了网络链接问题，但在一些较大的css，js文件上加载速度还是不尽人意。通过网上查询，目前发现有3款工具可以进行静态文件的压缩，一款是hexo-neat，操作起来非常简单，另一款是更为专业的gulp，最后发现的一款是hexo-all-minifier，他像是...","link":"","photos":[],"count_time":{"symbolsCount":883,"symbolsTime":"1 mins."},"categories":[{"name":"hexo折腾","slug":"hexo折腾","count":3,"path":"api/categories/hexo折腾.json"}],"tags":[{"name":"hexo","slug":"hexo","count":3,"path":"api/tags/hexo.json"}],"author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}},"feature":true},{"title":"本地项目部署到gitee以及仓库分支","uid":"fa9bcae6ffd4e6d8723c276168217c7b","slug":"本地项目部署到gitee以及仓库分支","date":"2022-02-22T08:13:10.000Z","updated":"2022-03-18T00:46:25.768Z","comments":true,"path":"api/articles/本地项目部署到gitee以及仓库分支.json","cover":"/img/computer.png","text":"一、如何将本地项目上传到码云 使用git bash，进入项目文件的根目录下 使用git init命令 （初始化一个git 本地仓库，此时会在本地项目文件创建一个 .git 的文件夹） 使用git remote add origin https://gitee.com/XXXX （...","link":"","photos":[],"count_time":{"symbolsCount":648,"symbolsTime":"1 mins."},"categories":[{"name":"网站建设","slug":"网站建设","count":1,"path":"api/categories/网站建设.json"}],"tags":[{"name":"随笔","slug":"随笔","count":2,"path":"api/tags/随笔.json"}],"author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}},"feature":true},{"title":"hexo博客图片显示异常的问题","uid":"8eec314ae055e7cdaccd8bbfdd5ebd88","slug":"hexo博客图片显示异常的问题","date":"2021-08-03T10:19:33.000Z","updated":"2022-03-19T04:05:33.068Z","comments":true,"path":"api/articles/hexo博客图片显示异常的问题.json","cover":"/img/hexo.png","text":"case1：本地预览图片失败第一步1.找到Hexo下的_config.yml里的post_asset_folder，把这个选项从false改成true。2.在Hexo目录下打开Git Brsh或cmd，执行一个下载上传图片插件的命令npm install hexo-asset-i...","link":"","photos":[],"count_time":{"symbolsCount":739,"symbolsTime":"1 mins."},"categories":[{"name":"hexo折腾","slug":"hexo折腾","count":3,"path":"api/categories/hexo折腾.json"}],"tags":[{"name":"hexo","slug":"hexo","count":3,"path":"api/tags/hexo.json"}],"author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}},"feature":true},{"title":"Mybatis通过注解批量插入/删除","uid":"dad0a65e340d9a1a17eb79c659785ca0","slug":"Mybatis通过注解批量插入删除","date":"2022-03-18T04:00:15.000Z","updated":"2022-03-18T04:55:32.916Z","comments":true,"path":"api/articles/Mybatis通过注解批量插入删除.json","cover":"/img/mybatis.png","text":"一、概述我们在写Mapper的时候，经常会通过注解的方式来写SQL语句，像下面这样。这要求我们传递的参数为一个具体的对象。 @Insert(\"INSERT INTO student (name, sex, addr) VALUES (#&#123;name&#125;, #&#1...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"mybatis","slug":"mybatis","count":1,"path":"api/categories/mybatis.json"}],"tags":[{"name":"转载","slug":"转载","count":1,"path":"api/tags/转载.json"}],"author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}}},{"title":"spring.05.AOP面向切面编程","uid":"ab49bc5bb50743ab3f03186f41f79e32","slug":"spring.05.AOP面向切面编程","date":"2022-03-11T14:26:19.000Z","updated":"2022-03-12T01:37:55.518Z","comments":true,"path":"api/articles/spring.05.AOP面向切面编程.json","cover":"/img/spring.png","text":"一、AOP简介Aop（aspect orient programming） ，面向切面编程。面向切面编程是从动态角度考虑程序运行过程。 AOP底层，就是采用动态代理模式实现的，采用了两种代理：JDK的动态代理，CGLIB的动态代理。 代理实现程序功能的统一维护的一种技术。 AOP...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"spring","slug":"spring","count":5,"path":"api/categories/spring.json"}],"tags":[{"name":"编程备忘录","slug":"编程备忘录","count":5,"path":"api/tags/编程备忘录.json"}],"author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}}},{"title":"spring.04.基于注解的DI","uid":"6c65710579b101172a7def9fe9f8af7c","slug":"spring.04.基于注解的DI","date":"2022-03-11T14:26:16.000Z","updated":"2022-03-12T00:22:39.636Z","comments":true,"path":"api/articles/spring.04.基于注解的DI.json","cover":"/img/spring.png","text":"基于注解的DI：通过注解完成Java对象的创建，属性赋值。 1.使用注解的步骤： 加入maven的依赖spring-context，在你加入spring-context的同时，间接加入spring-aop的依赖。使用注解必须使用spring-aop依赖 在类中加入spring的注...","link":"","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"spring","slug":"spring","count":5,"path":"api/categories/spring.json"}],"tags":[{"name":"编程备忘录","slug":"编程备忘录","count":5,"path":"api/tags/编程备忘录.json"}],"author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}}},{"title":"spring.03.spring的自动注入","uid":"dbac222cea299f8d84b40392321badcf","slug":"spring.03.spring的自动注入","date":"2022-03-11T14:26:15.000Z","updated":"2022-03-11T15:01:07.676Z","comments":true,"path":"api/articles/spring.03.spring的自动注入.json","cover":"/img/spring.png","text":"spring引用类型的自动注入引用类型的自动注入： spring框架根据某些规则可以给引用类型赋值。不用手动给引用类型赋值了。使用的规则常用的是byName, byType。 1.byName(按名称注入) ：java类中引用类型的属性名和spring容器中（配置文件）&lt;b...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"spring","slug":"spring","count":5,"path":"api/categories/spring.json"}],"tags":[{"name":"编程备忘录","slug":"编程备忘录","count":5,"path":"api/tags/编程备忘录.json"}],"author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}}},{"title":"spring.02.spring基于xml的DI","uid":"fa52b34bae7d4c54b1124245f3ed007f","slug":"spring.02.spring基于xml的DI","date":"2022-03-11T14:16:15.000Z","updated":"2022-03-12T00:22:24.819Z","comments":true,"path":"api/articles/spring.02.spring基于xml的DI.json","cover":"/img/spring.png","text":"spring基于xml的DI di（依赖注入）:给属性赋值 bean实例在调用无参构造器创建对象后，要对bean对象的属性进行初始化。初始化是容器自动完成的，称为注入。注入：就是赋值的意思 根据注入方式的不同，常用的有两类：set注入、构造注入。 1. set注入（设值注入） ：...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"spring","slug":"spring","count":5,"path":"api/categories/spring.json"}],"tags":[{"name":"编程备忘录","slug":"编程备忘录","count":5,"path":"api/tags/编程备忘录.json"}],"author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}}},{"title":"spring.01.初步了解spring以及IOC","uid":"b153846ea7b11a1e236e2e9eb42afa6c","slug":"spring.01.初步了解spring以及IOC","date":"2022-03-11T14:00:15.000Z","updated":"2022-03-12T00:22:27.754Z","comments":true,"path":"api/articles/spring.01.初步了解spring以及IOC.json","cover":"/img/spring.png","text":"1.spring简述Spring是一个轻量级的开源框架，是为解决企业级应用开发的复杂性而创建的，通过核心的Bean factory实现了底层的类的实例化和生命周期的管理。 Spring的最根本使命是：简化java开发。 优点 Spring是一个开源免费的框架 Spring是一个轻...","link":"","photos":[],"count_time":{"symbolsCount":"3.3k","symbolsTime":"3 mins."},"categories":[{"name":"spring","slug":"spring","count":5,"path":"api/categories/spring.json"}],"tags":[{"name":"编程备忘录","slug":"编程备忘录","count":5,"path":"api/tags/编程备忘录.json"}],"author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}}},{"title":"TS型网页视频下载方法","uid":"3c722e589e421720b87a9e591e2b274d","slug":"TS型网页视频下载方法","date":"2022-03-01T11:26:15.000Z","updated":"2022-03-01T12:14:19.797Z","comments":true,"path":"api/articles/TS型网页视频下载方法.json","cover":"/img/ts.png","text":" 有些网页上的视频是分成多个ts片段的，无法被chrome的各种嗅探器插件捕获，但通过F12开发工具监测网络（Network）文件可以发现（如题图）。 在过滤器中输入m3u8，可以发现一个独立的m3u8文件，这个文件就是记录了所有ts文件片段的一个播放列表。如果没有发现独立的m3...","link":"","photos":[],"count_time":{"symbolsCount":414,"symbolsTime":"1 mins."},"categories":[{"name":"白嫖小技巧","slug":"白嫖小技巧","count":1,"path":"api/categories/白嫖小技巧.json"}],"tags":[{"name":"随笔","slug":"随笔","count":2,"path":"api/tags/随笔.json"}],"author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}}},{"title":"使用hexo框架创建blog","uid":"f0537590fd58ea3759acae4e95b00914","slug":"使用hexo框架创建博客","date":"2022-02-22T08:13:10.000Z","updated":"2022-03-19T04:38:46.811Z","comments":true,"path":"api/articles/使用hexo框架创建博客.json","cover":"/img/hexo.png","text":"1.安装必要的环境 先下载node.js用cmd输入node -v和npm -v来查看安装的版本，确定安装成功。 安装淘宝的cnpm 管理器npm install -g cnpm –registry&#x3D;http://registry.npm.taobao.org cnpm...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"hexo折腾","slug":"hexo折腾","count":3,"path":"api/categories/hexo折腾.json"}],"tags":[{"name":"hexo","slug":"hexo","count":3,"path":"api/tags/hexo.json"}],"author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}},"feature":false},{"title":"图片测试","uid":"b46f97255570098a5ee6debe165c74f1","slug":"图片测试","date":"2021-08-03T09:37:43.000Z","updated":"2022-03-19T04:45:25.778Z","comments":true,"path":"api/articles/图片测试.json","cover":"/img/shiprock.jpg","text":"图片 ","link":"","photos":[],"count_time":{"symbolsCount":5,"symbolsTime":"1 mins."},"categories":[{"name":"网站测试","slug":"网站测试","count":3,"path":"api/categories/网站测试.json"}],"tags":[{"name":"测试","slug":"测试","count":3,"path":"api/tags/测试.json"}],"author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}}}]}