{"title":"hexo博客图片显示异常的问题","uid":"8eec314ae055e7cdaccd8bbfdd5ebd88","slug":"hexo博客图片显示异常的问题","date":"2021-08-03T10:19:33.000Z","updated":"2022-03-18T00:47:39.759Z","comments":true,"path":"api/articles/hexo博客图片显示异常的问题.json","keywords":null,"cover":"/img/sky.jpg","content":"<h1 id=\"case1：本地预览图片失败\"><a href=\"#case1：本地预览图片失败\" class=\"headerlink\" title=\"case1：本地预览图片失败\"></a>case1：本地预览图片失败</h1><h2 id=\"第一步\"><a href=\"#第一步\" class=\"headerlink\" title=\"第一步\"></a>第一步</h2><p>1.找到Hexo下的_config.yml里的post_asset_folder，把这个选项从false改成true。<br>2.在Hexo目录下打开Git Brsh或cmd，执行一个下载上传图片插件的命令npm install hexo-asset-image –save<br>3..继续在Git Brsh或cmd下利用hexo n ’文章名’生成一个文章(.md)，这时就会在同级的目录下生成一个和文章同名的文件夹。</p>\n<h2 id=\"第二步\"><a href=\"#第二步\" class=\"headerlink\" title=\"第二步\"></a>第二步</h2><p>1.在.md的文件中要插入图片时，先要把所要插入的图片放在生成的同名文件夹下。<br>2.利用markdown的语法将文件引入文章中。<br>例如：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">![这是图片](&lt;span&gt; 和文章同名的文件夹&#x2F;图片.jpg &quot;图片描述&quot; )<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>3.最后再启动一下</p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><p>1.下载插件是关键<br>2.下载插件后，新生成的文章的同名文件夹放图片，在文章里用<br>![这是图片](<span> 和文章同名的文件夹&#x2F;图片.jpg “图片描述”)即可引入图片<br>3.下载插件后，在下载插件之前生成的文章，你需要手动在同级目录下创建一个同名文件夹，其他步骤同上。<br>4.如果新创建了一个博客，还需要装插件。<br><strong>5.这个方式在本地编辑时有效，启动服务后无效。</strong></p>\n<h1 id=\"case2：部署到服务器后图片加载失败\"><a href=\"#case2：部署到服务器后图片加载失败\" class=\"headerlink\" title=\"case2：部署到服务器后图片加载失败\"></a>case2：部署到服务器后图片加载失败</h1><p>插入图片时用这种方式：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#123;% asset_img test.jpg  This is an test image %&#125;<span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>其中test.jpg就是你要引用的图片，我这里就是test.jpg，后面的This is an test image是图片描述，可以自己修改。</p>\n<h2 id=\"注意：\"><a href=\"#注意：\" class=\"headerlink\" title=\"注意：\"></a>注意：</h2><p>1.下载插件是大前提<br><strong>2.在本地编辑文档时这个命令无效，启动服务后有效</strong></p>\n","feature":true,"text":"case1：本地预览图片失败第一步1.找到Hexo下的_config.yml里的post_asset_folder，把这个选项从false改成true。2.在Hexo目录下打开Git Brsh或cmd，执行一个下载上传图片插件的命令npm install hexo-asset-i...","link":"","photos":[],"count_time":{"symbolsCount":739,"symbolsTime":"1 mins."},"categories":[{"name":"网站建设","slug":"网站建设","count":3,"path":"api/categories/网站建设.json"}],"tags":[{"name":"随笔","slug":"随笔","count":4,"path":"api/tags/随笔.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#case1%EF%BC%9A%E6%9C%AC%E5%9C%B0%E9%A2%84%E8%A7%88%E5%9B%BE%E7%89%87%E5%A4%B1%E8%B4%A5\"><span class=\"toc-text\">case1：本地预览图片失败</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%B8%80%E6%AD%A5\"><span class=\"toc-text\">第一步</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AC%AC%E4%BA%8C%E6%AD%A5\"><span class=\"toc-text\">第二步</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F\"><span class=\"toc-text\">注意</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#case2%EF%BC%9A%E9%83%A8%E7%BD%B2%E5%88%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%90%8E%E5%9B%BE%E7%89%87%E5%8A%A0%E8%BD%BD%E5%A4%B1%E8%B4%A5\"><span class=\"toc-text\">case2：部署到服务器后图片加载失败</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%EF%BC%9A\"><span class=\"toc-text\">注意：</span></a></li></ol></li></ol>","author":{"name":"LIYA的极光","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}},"mapped":true,"prev_post":{"title":"使用hexo框架创建blog","uid":"f0537590fd58ea3759acae4e95b00914","slug":"使用hexo框架创建博客","date":"2022-02-22T08:13:10.000Z","updated":"2022-03-18T00:46:45.802Z","comments":true,"path":"api/articles/使用hexo框架创建博客.json","keywords":null,"cover":"/img/m1.png","text":"1.安装必要的环境 先下载node.js用cmd输入node -v和npm -v来查看安装的版本，确定安装成功。 安装淘宝的cnpm 管理器npm install -g cnpm –registry&#x3D;http://registry.npm.taobao.org cnpm...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"网站建设","slug":"网站建设","count":3,"path":"api/categories/网站建设.json"}],"tags":[{"name":"随笔","slug":"随笔","count":4,"path":"api/tags/随笔.json"}],"author":{"name":"LIYA的极光","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}},"feature":true},"next_post":{"title":"spring.05.AOP面向切面编程","uid":"ab49bc5bb50743ab3f03186f41f79e32","slug":"spring.05.AOP面向切面编程","date":"2022-03-11T14:26:19.000Z","updated":"2022-03-12T01:37:55.518Z","comments":true,"path":"api/articles/spring.05.AOP面向切面编程.json","keywords":null,"cover":"/img/spring.png","text":"一、AOP简介Aop（aspect orient programming） ，面向切面编程。面向切面编程是从动态角度考虑程序运行过程。 AOP底层，就是采用动态代理模式实现的，采用了两种代理：JDK的动态代理，CGLIB的动态代理。 代理实现程序功能的统一维护的一种技术。 AOP...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"spring","slug":"spring","count":5,"path":"api/categories/spring.json"}],"tags":[{"name":"编程备忘录","slug":"编程备忘录","count":5,"path":"api/tags/编程备忘录.json"}],"author":{"name":"LIYA的极光","slug":"blog-author","avatar":"https://img-blog.csdnimg.cn/20210313122054101.png","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}}}}