{"title":"Mybatis通过注解批量插入/删除","uid":"dad0a65e340d9a1a17eb79c659785ca0","slug":"Mybatis通过注解批量插入删除","date":"2022-03-18T04:00:15.000Z","updated":"2022-03-18T04:55:32.916Z","comments":true,"path":"api/articles/Mybatis通过注解批量插入删除.json","keywords":null,"cover":"/img/mybatis.png","content":"<h2 id=\"一、概述\"><a href=\"#一、概述\" class=\"headerlink\" title=\"一、概述\"></a>一、概述</h2><p>我们在写Mapper的时候，经常会通过注解的方式来写SQL语句，像下面这样。这要求我们传递的参数为一个具体的对象。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token variable\">@Insert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"INSERT INTO student (name, sex, addr) VALUES (#&#123;name&#125;, #&#123;sex&#125;, #&#123;addr&#125;)\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">int</span> <span class=\"token keyword\">insert</span><span class=\"token punctuation\">(</span>Student stu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span></span></code></pre>\n<p>但是，如果需要批量插入List&lt; Student &gt; studentList；不可能遍历studentList并依次执行插入语句，这样效率太差。<br>还有一种是配置Mybatis的xml文件，反正题主觉得那个配置好复杂。有没有还是通过注解的方式，执行批量操作呢？</p>\n<h2 id=\"二、批量执行\"><a href=\"#二、批量执行\" class=\"headerlink\" title=\"二、批量执行\"></a>二、批量执行</h2><p>我们回想下SQL语句，插入一条记录：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> student <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> sex<span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"LiMing\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Beijing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>批量插入：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> student <span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> sex<span class=\"token punctuation\">,</span> addr<span class=\"token punctuation\">)</span> <span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"LiMing\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Beijing\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">\"LiNing\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Shanghai\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n\n<p>根据 id 删除一条记录：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<p>根据ids批量删除：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> student <span class=\"token keyword\">WHERE</span> id <span class=\"token operator\">IN</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span></span></code></pre>\n<h2 id=\"三、方法\"><a href=\"#三、方法\" class=\"headerlink\" title=\"三、方法\"></a>三、方法</h2><p>既然可以通过SQL语句批量执行，那我们可以修改注解。这里需要通过自定义Provider来实现。</p>\n<pre class=\"line-numbers language-java\" data-language=\"java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Component</span>\n<span class=\"token annotation punctuation\">@Mapper</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">StudentMapper</span> <span class=\"token punctuation\">&#123;</span>\n    <span class=\"token annotation punctuation\">@Insert</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"INSERT INTO student (name, sex, addr) VALUES (#&#123;name&#125;, #&#123;sex&#125;, #&#123;addr&#125;)\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Student</span> stu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM student\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">></span></span> <span class=\"token function\">selectAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@Select</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"SELECT * FROM student WHERE id = #&#123;id&#125;\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token class-name\">Student</span> <span class=\"token function\">selectById</span><span class=\"token punctuation\">(</span><span class=\"token annotation punctuation\">@Param</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"id\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@InsertProvider</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">=</span> <span class=\"token class-name\">Provider</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token string\">\"batchInsert\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">batchInsert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">></span></span> students<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token annotation punctuation\">@DeleteProvider</span><span class=\"token punctuation\">(</span>type <span class=\"token operator\">=</span> <span class=\"token class-name\">Provider</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> method <span class=\"token operator\">=</span> <span class=\"token string\">\"batchDelete\"</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">int</span> <span class=\"token function\">batchDelete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">></span></span> students<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    \n\n\n    <span class=\"token keyword\">class</span> <span class=\"token class-name\">Provider</span> <span class=\"token punctuation\">&#123;</span>\n        <span class=\"token comment\">/* 批量插入 */</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">batchInsert</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span> map<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">></span></span> students <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StringBuilder</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"INSERT INTO student (name,sex,addr) VALUES \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">MessageFormat</span> mf <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MessageFormat</span><span class=\"token punctuation\">(</span>\n                    <span class=\"token string\">\"(#'&#123;'list[&#123;0&#125;].name&#125;, #'&#123;'list[&#123;0&#125;].sex&#125;, #'&#123;'list[&#123;0&#125;].addr&#125;)\"</span>\n            <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> students<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>mf<span class=\"token punctuation\">.</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> students<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                    sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            <span class=\"token keyword\">return</span> sb<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n\n        <span class=\"token comment\">/* 批量删除 */</span>\n        <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">batchDelete</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Map</span> map<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n            <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">></span></span> students <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Student</span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">)</span> map<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"list\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token class-name\">StringBuilder</span> sb <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"DELETE FROM student WHERE id IN (\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> students<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n                sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span>students<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"'\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">&lt;</span> students<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n                    sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\",\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">&#125;</span>\n            sb<span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">\")\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span> sb<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">&#125;</span>\n    <span class=\"token punctuation\">&#125;</span>\n<span class=\"token punctuation\">&#125;</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>","text":"一、概述我们在写Mapper的时候，经常会通过注解的方式来写SQL语句，像下面这样。这要求我们传递的参数为一个具体的对象。 @Insert(\"INSERT INTO student (name, sex, addr) VALUES (#&#123;name&#125;, #&#1...","link":"","photos":[],"count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"categories":[{"name":"mybatis","slug":"mybatis","count":1,"path":"api/categories/mybatis.json"}],"tags":[{"name":"转载","slug":"转载","count":1,"path":"api/tags/转载.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E3%80%81%E6%A6%82%E8%BF%B0\"><span class=\"toc-text\">一、概述</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E3%80%81%E6%89%B9%E9%87%8F%E6%89%A7%E8%A1%8C\"><span class=\"toc-text\">二、批量执行</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%89%E3%80%81%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">三、方法</span></a></li></ol>","author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}},"mapped":true,"prev_post":{"title":"hexo博客图片显示异常的问题","uid":"8eec314ae055e7cdaccd8bbfdd5ebd88","slug":"hexo博客图片显示异常的问题","date":"2021-08-03T10:19:33.000Z","updated":"2022-03-19T04:05:33.068Z","comments":true,"path":"api/articles/hexo博客图片显示异常的问题.json","keywords":null,"cover":"/img/hexo.png","text":"case1：本地预览图片失败第一步1.找到Hexo下的_config.yml里的post_asset_folder，把这个选项从false改成true。2.在Hexo目录下打开Git Brsh或cmd，执行一个下载上传图片插件的命令npm install hexo-asset-i...","link":"","photos":[],"count_time":{"symbolsCount":739,"symbolsTime":"1 mins."},"categories":[{"name":"hexo折腾","slug":"hexo折腾","count":3,"path":"api/categories/hexo折腾.json"}],"tags":[{"name":"hexo","slug":"hexo","count":3,"path":"api/tags/hexo.json"}],"author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}},"feature":true},"next_post":{"title":"spring.05.AOP面向切面编程","uid":"ab49bc5bb50743ab3f03186f41f79e32","slug":"spring.05.AOP面向切面编程","date":"2022-03-11T14:26:19.000Z","updated":"2022-03-12T01:37:55.518Z","comments":true,"path":"api/articles/spring.05.AOP面向切面编程.json","keywords":null,"cover":"/img/spring.png","text":"一、AOP简介Aop（aspect orient programming） ，面向切面编程。面向切面编程是从动态角度考虑程序运行过程。 AOP底层，就是采用动态代理模式实现的，采用了两种代理：JDK的动态代理，CGLIB的动态代理。 代理实现程序功能的统一维护的一种技术。 AOP...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"spring","slug":"spring","count":5,"path":"api/categories/spring.json"}],"tags":[{"name":"编程备忘录","slug":"编程备忘录","count":5,"path":"api/tags/编程备忘录.json"}],"author":{"name":"流水静深","slug":"blog-author","avatar":"/头像/100.jpg","link":"/","description":"liya的博客，记录自己的成长足迹。","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/440492783"}}}}}}